/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.github.rudysysu.codes.thriftclient;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2024-03-15")
public class TBizRiskControlUserConsumeStat implements org.apache.thrift.TBase<TBizRiskControlUserConsumeStat, TBizRiskControlUserConsumeStat._Fields>, java.io.Serializable, Cloneable, Comparable<TBizRiskControlUserConsumeStat> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TBizRiskControlUserConsumeStat");

  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField TOTAL_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalAmount", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField TOTAL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalCount", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField LATEST_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("latestAmount", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField LATEST_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("latestCount", org.apache.thrift.protocol.TType.I64, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TBizRiskControlUserConsumeStatStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TBizRiskControlUserConsumeStatTupleSchemeFactory();

  public long uid; // required
  public long totalAmount; // required
  public long totalCount; // required
  public long latestAmount; // required
  public long latestCount; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UID((short)1, "uid"),
    TOTAL_AMOUNT((short)2, "totalAmount"),
    TOTAL_COUNT((short)3, "totalCount"),
    LATEST_AMOUNT((short)4, "latestAmount"),
    LATEST_COUNT((short)5, "latestCount");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UID
          return UID;
        case 2: // TOTAL_AMOUNT
          return TOTAL_AMOUNT;
        case 3: // TOTAL_COUNT
          return TOTAL_COUNT;
        case 4: // LATEST_AMOUNT
          return LATEST_AMOUNT;
        case 5: // LATEST_COUNT
          return LATEST_COUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __UID_ISSET_ID = 0;
  private static final int __TOTALAMOUNT_ISSET_ID = 1;
  private static final int __TOTALCOUNT_ISSET_ID = 2;
  private static final int __LATESTAMOUNT_ISSET_ID = 3;
  private static final int __LATESTCOUNT_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TOTAL_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("totalAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TOTAL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("totalCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LATEST_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("latestAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LATEST_COUNT, new org.apache.thrift.meta_data.FieldMetaData("latestCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TBizRiskControlUserConsumeStat.class, metaDataMap);
  }

  public TBizRiskControlUserConsumeStat() {
  }

  public TBizRiskControlUserConsumeStat(
    long uid,
    long totalAmount,
    long totalCount,
    long latestAmount,
    long latestCount)
  {
    this();
    this.uid = uid;
    setUidIsSet(true);
    this.totalAmount = totalAmount;
    setTotalAmountIsSet(true);
    this.totalCount = totalCount;
    setTotalCountIsSet(true);
    this.latestAmount = latestAmount;
    setLatestAmountIsSet(true);
    this.latestCount = latestCount;
    setLatestCountIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TBizRiskControlUserConsumeStat(TBizRiskControlUserConsumeStat other) {
    __isset_bitfield = other.__isset_bitfield;
    this.uid = other.uid;
    this.totalAmount = other.totalAmount;
    this.totalCount = other.totalCount;
    this.latestAmount = other.latestAmount;
    this.latestCount = other.latestCount;
  }

  public TBizRiskControlUserConsumeStat deepCopy() {
    return new TBizRiskControlUserConsumeStat(this);
  }

  @Override
  public void clear() {
    setUidIsSet(false);
    this.uid = 0;
    setTotalAmountIsSet(false);
    this.totalAmount = 0;
    setTotalCountIsSet(false);
    this.totalCount = 0;
    setLatestAmountIsSet(false);
    this.latestAmount = 0;
    setLatestCountIsSet(false);
    this.latestCount = 0;
  }

  public long getUid() {
    return this.uid;
  }

  public TBizRiskControlUserConsumeStat setUid(long uid) {
    this.uid = uid;
    setUidIsSet(true);
    return this;
  }

  public void unsetUid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UID_ISSET_ID);
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UID_ISSET_ID);
  }

  public void setUidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UID_ISSET_ID, value);
  }

  public long getTotalAmount() {
    return this.totalAmount;
  }

  public TBizRiskControlUserConsumeStat setTotalAmount(long totalAmount) {
    this.totalAmount = totalAmount;
    setTotalAmountIsSet(true);
    return this;
  }

  public void unsetTotalAmount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTALAMOUNT_ISSET_ID);
  }

  /** Returns true if field totalAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalAmount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTALAMOUNT_ISSET_ID);
  }

  public void setTotalAmountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTALAMOUNT_ISSET_ID, value);
  }

  public long getTotalCount() {
    return this.totalCount;
  }

  public TBizRiskControlUserConsumeStat setTotalCount(long totalCount) {
    this.totalCount = totalCount;
    setTotalCountIsSet(true);
    return this;
  }

  public void unsetTotalCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTALCOUNT_ISSET_ID);
  }

  /** Returns true if field totalCount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTALCOUNT_ISSET_ID);
  }

  public void setTotalCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTALCOUNT_ISSET_ID, value);
  }

  public long getLatestAmount() {
    return this.latestAmount;
  }

  public TBizRiskControlUserConsumeStat setLatestAmount(long latestAmount) {
    this.latestAmount = latestAmount;
    setLatestAmountIsSet(true);
    return this;
  }

  public void unsetLatestAmount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LATESTAMOUNT_ISSET_ID);
  }

  /** Returns true if field latestAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetLatestAmount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LATESTAMOUNT_ISSET_ID);
  }

  public void setLatestAmountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LATESTAMOUNT_ISSET_ID, value);
  }

  public long getLatestCount() {
    return this.latestCount;
  }

  public TBizRiskControlUserConsumeStat setLatestCount(long latestCount) {
    this.latestCount = latestCount;
    setLatestCountIsSet(true);
    return this;
  }

  public void unsetLatestCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LATESTCOUNT_ISSET_ID);
  }

  /** Returns true if field latestCount is set (has been assigned a value) and false otherwise */
  public boolean isSetLatestCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LATESTCOUNT_ISSET_ID);
  }

  public void setLatestCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LATESTCOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((java.lang.Long)value);
      }
      break;

    case TOTAL_AMOUNT:
      if (value == null) {
        unsetTotalAmount();
      } else {
        setTotalAmount((java.lang.Long)value);
      }
      break;

    case TOTAL_COUNT:
      if (value == null) {
        unsetTotalCount();
      } else {
        setTotalCount((java.lang.Long)value);
      }
      break;

    case LATEST_AMOUNT:
      if (value == null) {
        unsetLatestAmount();
      } else {
        setLatestAmount((java.lang.Long)value);
      }
      break;

    case LATEST_COUNT:
      if (value == null) {
        unsetLatestCount();
      } else {
        setLatestCount((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case UID:
      return getUid();

    case TOTAL_AMOUNT:
      return getTotalAmount();

    case TOTAL_COUNT:
      return getTotalCount();

    case LATEST_AMOUNT:
      return getLatestAmount();

    case LATEST_COUNT:
      return getLatestCount();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case UID:
      return isSetUid();
    case TOTAL_AMOUNT:
      return isSetTotalAmount();
    case TOTAL_COUNT:
      return isSetTotalCount();
    case LATEST_AMOUNT:
      return isSetLatestAmount();
    case LATEST_COUNT:
      return isSetLatestCount();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TBizRiskControlUserConsumeStat)
      return this.equals((TBizRiskControlUserConsumeStat)that);
    return false;
  }

  public boolean equals(TBizRiskControlUserConsumeStat that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_uid = true;
    boolean that_present_uid = true;
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (this.uid != that.uid)
        return false;
    }

    boolean this_present_totalAmount = true;
    boolean that_present_totalAmount = true;
    if (this_present_totalAmount || that_present_totalAmount) {
      if (!(this_present_totalAmount && that_present_totalAmount))
        return false;
      if (this.totalAmount != that.totalAmount)
        return false;
    }

    boolean this_present_totalCount = true;
    boolean that_present_totalCount = true;
    if (this_present_totalCount || that_present_totalCount) {
      if (!(this_present_totalCount && that_present_totalCount))
        return false;
      if (this.totalCount != that.totalCount)
        return false;
    }

    boolean this_present_latestAmount = true;
    boolean that_present_latestAmount = true;
    if (this_present_latestAmount || that_present_latestAmount) {
      if (!(this_present_latestAmount && that_present_latestAmount))
        return false;
      if (this.latestAmount != that.latestAmount)
        return false;
    }

    boolean this_present_latestCount = true;
    boolean that_present_latestCount = true;
    if (this_present_latestCount || that_present_latestCount) {
      if (!(this_present_latestCount && that_present_latestCount))
        return false;
      if (this.latestCount != that.latestCount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(uid);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(totalAmount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(totalCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(latestAmount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(latestCount);

    return hashCode;
  }

  @Override
  public int compareTo(TBizRiskControlUserConsumeStat other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTotalAmount()).compareTo(other.isSetTotalAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalAmount, other.totalAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTotalCount()).compareTo(other.isSetTotalCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalCount, other.totalCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLatestAmount()).compareTo(other.isSetLatestAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatestAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latestAmount, other.latestAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLatestCount()).compareTo(other.isSetLatestCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatestCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latestCount, other.latestCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TBizRiskControlUserConsumeStat(");
    boolean first = true;

    sb.append("uid:");
    sb.append(this.uid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalAmount:");
    sb.append(this.totalAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalCount:");
    sb.append(this.totalCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("latestAmount:");
    sb.append(this.latestAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("latestCount:");
    sb.append(this.latestCount);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TBizRiskControlUserConsumeStatStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TBizRiskControlUserConsumeStatStandardScheme getScheme() {
      return new TBizRiskControlUserConsumeStatStandardScheme();
    }
  }

  private static class TBizRiskControlUserConsumeStatStandardScheme extends org.apache.thrift.scheme.StandardScheme<TBizRiskControlUserConsumeStat> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TBizRiskControlUserConsumeStat struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.uid = iprot.readI64();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TOTAL_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.totalAmount = iprot.readI64();
              struct.setTotalAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TOTAL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.totalCount = iprot.readI64();
              struct.setTotalCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LATEST_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.latestAmount = iprot.readI64();
              struct.setLatestAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LATEST_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.latestCount = iprot.readI64();
              struct.setLatestCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TBizRiskControlUserConsumeStat struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(UID_FIELD_DESC);
      oprot.writeI64(struct.uid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_AMOUNT_FIELD_DESC);
      oprot.writeI64(struct.totalAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_COUNT_FIELD_DESC);
      oprot.writeI64(struct.totalCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LATEST_AMOUNT_FIELD_DESC);
      oprot.writeI64(struct.latestAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LATEST_COUNT_FIELD_DESC);
      oprot.writeI64(struct.latestCount);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TBizRiskControlUserConsumeStatTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TBizRiskControlUserConsumeStatTupleScheme getScheme() {
      return new TBizRiskControlUserConsumeStatTupleScheme();
    }
  }

  private static class TBizRiskControlUserConsumeStatTupleScheme extends org.apache.thrift.scheme.TupleScheme<TBizRiskControlUserConsumeStat> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TBizRiskControlUserConsumeStat struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUid()) {
        optionals.set(0);
      }
      if (struct.isSetTotalAmount()) {
        optionals.set(1);
      }
      if (struct.isSetTotalCount()) {
        optionals.set(2);
      }
      if (struct.isSetLatestAmount()) {
        optionals.set(3);
      }
      if (struct.isSetLatestCount()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetUid()) {
        oprot.writeI64(struct.uid);
      }
      if (struct.isSetTotalAmount()) {
        oprot.writeI64(struct.totalAmount);
      }
      if (struct.isSetTotalCount()) {
        oprot.writeI64(struct.totalCount);
      }
      if (struct.isSetLatestAmount()) {
        oprot.writeI64(struct.latestAmount);
      }
      if (struct.isSetLatestCount()) {
        oprot.writeI64(struct.latestCount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TBizRiskControlUserConsumeStat struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.uid = iprot.readI64();
        struct.setUidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.totalAmount = iprot.readI64();
        struct.setTotalAmountIsSet(true);
      }
      if (incoming.get(2)) {
        struct.totalCount = iprot.readI64();
        struct.setTotalCountIsSet(true);
      }
      if (incoming.get(3)) {
        struct.latestAmount = iprot.readI64();
        struct.setLatestAmountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.latestCount = iprot.readI64();
        struct.setLatestCountIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

